Empezar en git:

	0. Instalar la herramienta git en el terminal : https://git-scm.com/book/es/v1/Empezando-Instalando-Git

	1. Abrir el terminal, crear una carpeta donde quieras el repositorio y dirígete desde la terminal
		⁃Comandos para manejarnos por el terminal (UNIX)
			⁃ls : listar para ver todos los archivos de ese directorio.
			⁃cd : cambiar de directorio.
			⁃cd ..  : para volver atrás en el directorio.
			⁃touch : crea un archivo vacío.
			⁃mkdir : crea un nuevo directorio respecto donde estás.
			⁃mkdir -p : crea ramas de directorios que no existen.
			⁃pwd : nos dice nuestro rama actual de nuestro directorio.
			⁃man [comando] : para consultar en el manual dicho comando.
			-*.extension : para referirnos a todos las extensiones de un directorio
			-

	2.	
		⁃Desde un repositorio en GitHub:
		⁃git clone /path/to/repository
		⁃Crear un repositorio Local:
		⁃git init /path
	
	3. git add <nombre_del_archivo>  o git . : para registrar los cambios (preparas los archivos  o cambios para ser añadidos al repositorios)
	
	4. Ahora añadimos esos cambios “commit” al repositorio local (o copia del remoto)
		⁃ git commit -m “Mensaje explicando el cambio”
		⁃ HEAD ya apunta a esta versión del archivo.
	5. Añadimos definitivamente este archivo al repositorio remoto
		⁃ git remote add origin <server>
	6.	


Comandos Git:

- git init : crea un repositorio nuevo.
- git clone /path/to/repository : clona un repositorio que está en Github a tu directorio local.
- git commit 
- git log : para ver los cambios(todos los commits) y su HEAD.
- git config --global http.proxy 'proxy.wifi.uma.es:3128' : para redes con proxy
- git add origin (archivos que vas a modificar) ->origin es el nombre (alias) que se le da al repositorio al que le vas a hacer stage
- git remote -v : muestra los repositorios remotos que tienes con su respectivo enlace
- git remote : muestra los alias de los repositorios remotos que tienes
- git remote add [nombre] [url] : para añadir repositorios remotos y asignarle un alias
- git remote show [nombre-repositorio] : para mostrar más información del repositorio remoto
- git remote rename : para renombrar una referencia a un repositorio remoto
- git remote rm  [alias-repositorio-remoto]: para eliminar un repositorio remoto 
- git fetch [remote-name] : para recuperar datos remotos de tus repositorios remotos
- git pull : para recuperar y unir la rama remota con la rama actual. 
- git push [nombre-remoto][nombre-rama] : para enviar un repositorio local a uno remoto



Atributos

-u : para hacer tracking del repositorio anterior y así tener sincronizado los repositorios

-m : de master(rama maestra)

rm : remove



Zonas de trabajo:

- El directorio de trabajo.
- Index (Stage) : Zona intermedia entre el directorio (local) y el servidor.
- HEAD : apunta al último commit realizado.

Referencias:

	• https://gist.github.com/jelcaf/1404619
	• http://rogerdudler.github.io/git-guide/index.es.html
	• https://git-scm.com/book/es/v1/Fundamentos-de-Git-Trabajando-con-repositorios-remotos

Tips: 
	• Para usuarios Mac puedes probar la terminal Iterm2 (gratuita) e instalar https://gist.github.com/kevin-smets/8568070
	